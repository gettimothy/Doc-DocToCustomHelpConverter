*  Doc Org To Custom Help [DocOrgToCustomHelpHelp]** Todo#+BEGIN_EXAMPLE   make both converters work properly to 7 levels.   Headlines should automatically reflect a subclass or page    subclasses as pages should not be included twice   grok the infinite recursion on some Help topics.#+END_EXAMPLE** Installation#+BEGIN_EXAMPLEThis project resides atMCHttpRepository    location: 'http://www.squeaksource.com/Doc'    user: 'tty'    password: ''with a very basic ConfigurationOfDoc at http://www.squeaksource.com/MetacelloRepository/   ConfigurationOfDoc loadDefault.Doc depends on XTreams-Parsing so the below should be run prior to installing DocInstaller ss       project: 'MetacelloRepository';       install: 'ConfigurationOfXtreams'.(Smalltalk at: #ConfigurationOfXtreams) project bleedingEdge loadWhen it throws an exception about in XTIOHandle>class initialize, change Display to Project as Display is no longer in the startup list.#+END_EXAMPLE   ** Overview#+BEGIN_EXAMPLE  This CustomHelp subclass was created by evaluating: DocOrgToCustomHelp createFromFileChooser.DocOrgToX is a set of Squeak Doc classes used to convert between CustomHelp to Markup and back again.The DocCustomHelpToOrg and DocOrgToCustomHelp classes convert from CustomHelp to Org and back again.https://orgmode.org/guide/MCHttpRepository    location: 'http://www.squeaksource.com/Doc'    user: 'tty'    password: ''Currently, the tool works best down to at most three levels of org headline.They are of fomr    * Book Name  [ClassNameOfHelp]     ** Page name  [optionalshortpagenamehere]    ** One  [pageone]   "this page will be named 'pageone"    ** Two               "page names defaults to lowercase 'two'"    ** Fiz Biz Baz       "page names defaults to lowercase 'fizbizbaz'"    ** A Subclass  [CapitalizedFooHelp]#+END_EXAMPLE** Typical Workflow  #+BEGIN_EXAMPLE(Create a .org file from existing CustomHelp. for this file, it is DocOrgToCustomHelp.org) DocCustomHelpToOrg  toFile:  DocOrgToX.orgOpen DocOrgToX.org in the your favorite text editor .Save changes.DocOrgToCustomHelp viewFromFileChooser.  (this presents a 'bastardized' version of the content as no pages have been installed in the CustomHelp topics)DocOrgToCustomHelp createFromFileChooser.  (this creates and installs valid CustomHelp classes in image)#+END_EXAMPLE** An Atypical Workflow #+BEGIN_EXAMPLECreate a Foo.org file with your favorite text editorAdd some headlines of different levels Save changes.DocOrgToCustomHelp viewFromFileChooser.  (this presents a 'bastardized' version of the content as no pages have been installed in the CustomHelp topics)DocOrgToCustomHelp createFromFileChooser.  (this creates and installs valid CustomHelp classes in image)#+END_EXAMPLE** Creating Org Files from CustomHelp [HelpCreatingOrgFiles]***  Dump Single File  #+BEGIN_EXAMPLE    DocCustomHelpToOrg  toFile:  TerseGuideHelp. To output  all*  CustomHelp in the image to .org files in the default directory evaluate the following:  CustomHelp      allSubclassesWithLevelDo:       [ : eachClass : lvl | 	  (lvl = 2 ) 	    ifTrue:[			(eachClass = HelpOnHelp) | (eachClass = MetacelloConfigurationHelp)  		  ifFalse:[DocCustomHelpToOrg toFile: eachClass]].     startingLevel: 1.   at this writing HelpOnHelp, MetacelloConfigurationHelp either infinite loop or stall out.#+END_EXAMPLE***  Dump All Files  #+BEGIN_EXAMPLE To output  all*  CustomHelp in the image to .org files in the default directory evaluate the following:  CustomHelp      allSubclassesWithLevelDo:       [ : eachClass : lvl | 	  (lvl = 2 ) 	    ifTrue:[			(eachClass = HelpOnHelp) | (eachClass = MetacelloConfigurationHelp)  		  ifFalse:[DocCustomHelpToOrg toFile: eachClass]].     startingLevel: 1.   at this writing HelpOnHelp, MetacelloConfigurationHelp either infinite loop or stall out.#+END_EXAMPLE** View Help from Org files in HelpBrowser #+BEGIN_EXAMPLE   DocOrgToCustomHelp viewFromFileChooser.#+END_EXAMPLE** Install Help in Squeak from an Org file #+BEGIN_EXAMPLE   DocOrgToCustomHelp createFromFileChooser.#+END_EXAMPLE** Org Markup#+BEGIN_EXAMPLE   https://orgmode.org/guide/    For Squeak Help, the author chose to utilize only Org headlines     https://orgmode.org/guide/Headlines.html#Headlines     and the Begin Example End Example Block for escaping wierd stuff that is difficult to parse like  &^#^&@*(%    and for escaping the    BEGIN_EXAMPLE/END_EXAMPLE Block itself (down to one level)Two Squeak specific additions have been added to delineate method names and class names for CustomHelp methods/pages and subclasses.    These are used in headlines to specify either a page selector or a subclass of a topic.heaqdlines with lower case names, one word in brackets [likethis] specify a page selectorheadlines with no brackets default to the equivalent of this [headlineswithnobracketsdefaulttotheequivalentofthis]headlines upper case names, one word in Brackets and ending in Help [LikeThisHelp] specify a subclass (sub-book) to create.#+END_EXAMPLE** Why#+BEGIN_EXAMPLEThe author uses Emacs and Org mode and is trying to improve the documentation for Squeak.There is boatloads of information on Squeak out there, it is just very hard to find sometimes.This tool (and others to follow) will attempt to make it easy to create and maintain content without the bother of working with the CustomHelp classes directly.#+END_EXAMPLE